global:
  imageRegistry: ""
  imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
commonLabels: {}
commonAnnotations: {}
extraDeploy: []
existingConfigMap: ""
configInline: {}
rbac:
  create: true
psp:
  create: false
networkPolicy:
  enabled: false
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}
prometheusRule:
  enabled: false
controller:
  image:
    registry: docker.io
    repository: bitnami/metallb-controller
    tag: 0.12.1-debian-10-r46
    pullPolicy: IfNotPresent
    pullSecrets: []
  hostAliases: []
  rbac:
    create: true
  psp:
    create: true
  priorityClassName: ""
  resources:
    limits: {}
    requests: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podLabels: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  serviceAccount:
    create: true
    name: ""
  securityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
    fsGroup: 1001
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
  revisionHistoryLimit: 3
  terminationGracePeriodSeconds: 0
  containerPort:
    metrics: 7472
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  prometheus:
    serviceMonitor:
      enabled: false
      jobLabel: "app.kubernetes.io/name"
      interval: ""
      metricRelabelings: []
      relabelings: []
speaker:
  image:
    registry: docker.io
    repository: bitnami/metallb-speaker
    tag: 0.12.1-debian-10-r46
    pullPolicy: IfNotPresent
    pullSecrets: []
  rbac:
    create: true
  hostAliases: []
  psp:
    create: true
  priorityClassName: ""
  resources:
    limits: {}
    requests: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podLabels: {}
  serviceAccount:
    create: true
    name: ""
  daemonset:
    terminationGracePeriodSeconds: 2
    hostPorts:
      metrics: 7472
  secretName: ""
  secretKey: ""
  secretValue: ""
  initContainers: []
  securityContext:
    enabled: true
    runAsUser: 0
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
      add:
        - NET_ADMIN
        - NET_RAW
        - SYS_ADMIN
  extraEnvVars: []
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  prometheus:
    serviceMonitor:
      enabled: false
      jobLabel: "app.kubernetes.io/name"
      interval: ""
      metricRelabelings: []
      relabelings: []
