global:
  imageRegistry: ""
  imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
commonLabels: {}
commonAnnotations: {}
extraDeploy: []
image:
  registry: docker.io
  repository: bitnami/metrics-server
  tag: 0.6.1-debian-10-r50
  pullPolicy: IfNotPresent
  pullSecrets: []
hostAliases: []
replicas: 1
updateStrategy:
  type: RollingUpdate
rbac:
  create: true
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true
apiService:
  create: false
  insecureSkipTLSVerify: true
  caBundle: ""
securePort: 8443
hostNetwork: false
dnsPolicy: "ClusterFirst"
command: ["metrics-server"]
extraArgs: {}
podLabels: {}
podAnnotations: {}
priorityClassName: ""
podAffinityPreset: ""
podAntiAffinityPreset: soft
podDisruptionBudget:
  enabled: false
  minAvailable: ""
  maxUnavailable: ""
nodeAffinityPreset:
  type: ""
  key: ""
  values: []
affinity: {}
topologySpreadConstraints: []
nodeSelector: {}
tolerations: []
service:
  type: ClusterIP
  port: 443
  nodePort: ""
  loadBalancerIP: ""
  annotations: {}
  labels: {}
resources:
  limits: {}
  requests: {}
livenessProbe:
  enabled: true
  failureThreshold: 3
  httpGet:
    path: /livez
    port: https
    scheme: HTTPS
  periodSeconds: 10
readinessProbe:
  enabled: true
  failureThreshold: 3
  httpGet:
    path: /readyz
    port: https
    scheme: HTTPS
  periodSeconds: 10
customLivenessProbe: {}
customReadinessProbe: {}
containerSecurityContext:
  enabled: true
  readOnlyRootFilesystem: false
  runAsNonRoot: true
podSecurityContext:
  enabled: false
extraVolumes: []
extraVolumeMounts: []
extraContainers: {}
